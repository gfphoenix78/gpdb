## ######################################################################
##            ___   ___    _  _  ___ _____   ___ ___ ___ _____
##           |   \ / _ \  | \| |/ _ \_   _| | __|   \_ _|_   _|
##           | |) | (_) | | .` | (_) || |   | _|| |) | |  | |
##           |___/ \___/  |_|\_|\___/ |_|   |___|___/___| |_|
##            _____ _  _ ___ ___   ___ ___ _    ___ _
##           |_   _| || |_ _/ __| | __|_ _| |  | __| |
##             | | | __ || |\__ \ | _| | || |__| _||_|
##             |_| |_||_|___|___/ |_| |___|____|___(_)
##
## This is a generated file. Please edit the corresponding template
## file (example: templates/gpdb-tpl.yml) and regenerate the pipeline
## using appropriate tool (example: gen_pipeline.py -t prod).
## ----------------------------------------------------------------------
## Generated by gen_pipeline.py at: 2020-11-26 11:46:11.784870
## Template file: gpdb-tpl.yml
## OS Types: ['centos7', 'ubuntu18.04']
## Test Sections: ['ICW']
## ======================================================================

## ======================================================================
##                   _
##   __ _ _ __   ___| |__   ___  _ __ ___
##  / _` | '_ \ / __| '_ \ / _ \| '__/ __|
## | (_| | | | | (__| | | | (_) | |  \__ \
##  \__,_|_| |_|\___|_| |_|\___/|_|  |___/
## ======================================================================
## NOTE: only one anchors section is allowed per file, so we define this
##  at the top of the file so anchors are usable as early as possible.
anchors:
- &default_platform
  PLATFORM: centos7-gpdb7

- &ccp_default_params
  action: create
  delete_on_failure: true
  generate_random_name: true
  terraform_source: ccp_src/google/

- &ccp_default_vars
  instance_type: n1-standard-1
  <<: *default_platform

- &destroy_common
  action: destroy
  terraform_source: ccp_src/google/
  vars:
    aws_instance-node-instance_type: t2.micro #t2.micro is ignored in destroy, but aws_instance-node-instance_type is required.
    aws_ebs_volume_type: standard

- &ccp_destroy
  put: terraform
  params:
    <<: *destroy_common
    env_name_file: terraform/name
  get_params:
    action: destroy

- &ccp_destroy_two_clusters
  in_parallel:
    - put: terraform_1
      params:
        <<: *destroy_common
        env_name_file: terraform_1/name
      get_params:
        action: destroy
    - put: terraform_2
      params:
        <<: *destroy_common
        env_name_file: terraform_2/name
      get_params:
        action: destroy

- &ccp_gen_cluster_default_params
  AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
  AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
  AWS_DEFAULT_REGION: ((aws-region))
  BUCKET_PATH: clusters-google/
  BUCKET_NAME: ((tf-bucket-name))
  CLOUD_PROVIDER: google
  <<: *default_platform

- &set_failed
  do:
    - task: on_failure_set_failed
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: pivotaldata/ccp
            tag: "7"
        inputs:
          - name: ccp_src
          - name: terraform
        run:
          path: 'ccp_src/google/ccp_failed_test.sh'
        params:
          GOOGLE_CREDENTIALS: ((google-service-account-key))
          GOOGLE_PROJECT_ID: ((google-project-id))
          GOOGLE_ZONE: ((google-zone))
          GOOGLE_SERVICE_ACCOUNT: ((google-service-account))
          AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
          AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
          AWS_DEFAULT_REGION: ((tf-machine-region))
          BUCKET_PATH: clusters-google/
          BUCKET_NAME: ((tf-bucket-name))

- &set_failed_two_clusters_common
  platform: linux
  image_resource:
    type: registry-image
    source:
      repository: pivotaldata/ccp
      tag: "7"
  run:
    path: 'ccp_src/google/ccp_failed_test.sh'
  params:
    GOOGLE_CREDENTIALS: ((google-service-account-key))
    GOOGLE_PROJECT_ID: ((google-project-id))
    GOOGLE_ZONE: ((google-zone))
    GOOGLE_SERVICE_ACCOUNT: ((google-service-account))
    AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
    AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
    AWS_DEFAULT_REGION: ((tf-machine-region))
    BUCKET_PATH: clusters-google/
    BUCKET_NAME: ((tf-bucket-name))

- &terraform_cluster
  type: terraform
  source:
    env:
      AWS_ACCESS_KEY_ID: ((tf-machine-access-key-id))
      AWS_SECRET_ACCESS_KEY: ((tf-machine-secret-access-key))
      GOOGLE_CREDENTIALS: ((google-service-account-key))
    vars:
      project_id: ((google-project-id))
    storage:
      access_key_id: ((tf-machine-access-key-id))
      secret_access_key: ((tf-machine-secret-access-key))
      region_name: ((aws-region))
      # This is not parameterized, on purpose. All tfstates will go to this spot,
      # and different teams will place there clusters' tfstate files under different paths
      bucket: gpdb5-pipeline-dynamic-terraform
      bucket_path: clusters-google/

- &set_failed_two_clusters
  in_parallel:
    - task: on_failure_set_failed-1
      config:
        <<: *set_failed_two_clusters_common
        inputs:
          - name: ccp_src
          - name: terraform_1
    - task: on_failure_set_failed-2
      config:
        <<: *set_failed_two_clusters_common
        inputs:
          - name: ccp_src
          - name: terraform_2

## ======================================================================
##   __ _ _ __ ___  _   _ _ __  ___
##  / _` | '__/ _ \| | | | '_ \/ __|
## | (_| | | | (_) | |_| | |_) \__ \
##  \__, |_|  \___/ \__,_| .__/|___/
##  |___/                |_|
## ======================================================================

groups:
- name: all
  jobs:
  - concourse_unit_tests
  - compile_gpdb_centos7
  - compile_gpdb_ubuntu18.04
  ## --------------------------------------------------------------------
  - icw_gporca_centos7
  - icw_planner_centos7
  - icw_gporca_icproxy_centos7
  - icw_planner_icproxy_centos7
  - icw_gporca_ictcp_centos7
  - icw_gporca_ubuntu18.04
  - icw_planner_ubuntu18.04
  - icw_gporca_icproxy_ubuntu18.04
  - icw_planner_icproxy_ubuntu18.04
  - gate_icw_end
 ## ---------------------------------------------------------------------


## ======================================================================

- name: Compile
  jobs:
  - compile_gpdb_centos7
  - compile_gpdb_ubuntu18.04

## ======================================================================

- name: ICW
  jobs:
  - icw_gporca_centos7
  - icw_planner_centos7
  - icw_gporca_icproxy_centos7
  - icw_planner_icproxy_centos7
  - icw_gporca_ictcp_centos7
  - compile_gpdb_centos7
  - icw_gporca_ubuntu18.04
  - icw_planner_ubuntu18.04
  - icw_gporca_icproxy_ubuntu18.04
  - icw_planner_icproxy_ubuntu18.04
  - compile_gpdb_ubuntu18.04
  - gate_icw_end


## ======================================================================



## ======================================================================
##                                           _
##  _ __ ___  ___  ___  _   _ _ __ ___ ___  | |_ _   _ _ __   ___  ___
## | '__/ _ \/ __|/ _ \| | | | '__/ __/ _ \ | __| | | | '_ \ / _ \/ __|
## | | |  __/\__ \ (_) | |_| | | | (_|  __/ | |_| |_| | |_) |  __/\__ \
## |_|  \___||___/\___/ \__,_|_|  \___\___|  \__|\__, | .__/ \___||___/
##                                               |___/|_|
## ======================================================================

resource_types:
- name: terraform
  type: registry-image
  source:
    repository: ljfranklin/terraform-resource
    tag: 0.11.14
- name: gcs
  type: registry-image
  source:
    repository: frodenas/gcs-resource
## ======================================================================
##  _ __ ___  ___  ___  _   _ _ __ ___ ___  ___
## | '__/ _ \/ __|/ _ \| | | | '__/ __/ _ \/ __|
## | | |  __/\__ \ (_) | |_| | | | (_|  __/\__ \
## |_|  \___||___/\___/ \__,_|_|  \___\___||___/
## ======================================================================

resources:
- name: icw_planner_centos7_dump
  type: gcs
  source:
    bucket: ((gcs-bucket-intermediates))
    json_key: ((concourse-gcs-resources-service-account-key))
    versioned_file: ((pipeline-name))/icw_planner_centos7_dump/dump.sql.xz

- name: gpdb_src
  type: git
  source:
    branch: ((gpdb-git-branch))
    uri: ((gpdb-git-remote))
    ignore_paths:
    - gpdb-doc/*
    - README*

- name: pg_auto_failover_src
  type: git
  source:
    branch: autofailover
    uri: https://github.com/gfphoenix78/pg_auto_failover


- name: bats_core_src
  type: git
  source:
    branch: master
    uri: https://github.com/bats-core/bats-core.git
    tag_filter: v1.1.0

- name: libquicklz-centos7
  type: gcs
  source:
    bucket: ((gcs-bucket))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: gp-internal-artifacts/centos7/libquicklz-(1\.5\.0-.*)-1.el7.x86_64.rpm

- name: libquicklz-devel-centos7
  type: gcs
  source:
    bucket: ((gcs-bucket))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: gp-internal-artifacts/centos7/libquicklz-devel-(1\.5\.0-.*)-1.el7.x86_64.rpm

- name: libquicklz-ubuntu18.04
  type: gcs
  source:
    bucket: ((gcs-bucket))
    json_key: ((concourse-gcs-resources-service-account-key))
    regexp: gp-internal-artifacts/ubuntu18.04/libquicklz-dev_(1\.5\.0-.*)-1_amd64.deb

- name: gpdb7-centos7-build
  type: registry-image
  source:
    repository: pivotaldata/gpdb7-centos7-build
    tag: latest

- name: gpdb7-centos7-test
  type: registry-image
  source:
    repository: pivotaldata/gpdb7-centos7-test
    tag: latest


- name: gpdb7-ubuntu18.04-build
  type: registry-image
  source:
    repository: pivotaldata/gpdb7-ubuntu18.04-build
    tag: latest

- name: gpdb7-ubuntu18.04-test
  type: registry-image
  source:
    repository: pivotaldata/gpdb7-ubuntu18.04-test
    tag: latest


- name: bin_gpdb_centos7
  type: gcs
  source:
    bucket: ((gcs-bucket-intermediates))
    json_key: ((concourse-gcs-resources-service-account-key))
    versioned_file: ((pipeline-name))/bin_gpdb_centos7/bin_gpdb.tar.gz

- name: bin_gpdb_clients_centos7
  type: gcs
  source:
    bucket: ((gcs-bucket-intermediates))
    json_key: ((concourse-gcs-resources-service-account-key))
    versioned_file: ((pipeline-name))/bin_gpdb_clients_centos7/bin_gpdb_clients.tar.gz


- name: bin_gpdb_ubuntu18.04
  type: gcs
  source:
    bucket: ((gcs-bucket-intermediates))
    json_key: ((concourse-gcs-resources-service-account-key))
    versioned_file: ((pipeline-name))/bin_gpdb_ubuntu18.04/bin_gpdb.tar.gz

- name: bin_gpdb_clients_ubuntu18.04
  type: gcs
  source:
    bucket: ((gcs-bucket-intermediates))
    json_key: ((concourse-gcs-resources-service-account-key))
    versioned_file: ((pipeline-name))/bin_gpdb_clients_ubuntu18.04/bin_gpdb_clients.tar.gz




- name: reduced-frequency-trigger
  type: time
  source:
    location: America/Los_Angeles
    days: [Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday]
    start: ((reduced-frequency-trigger-start))
    stop: ((reduced-frequency-trigger-stop))


## ======================================================================
##    _       _
##   (_) ___ | |__  ___
##   | |/ _ \| '_ \/ __|
##   | | (_) | |_) \__ \
##  _/ |\___/|_.__/|___/
## |__/
## ======================================================================

jobs:

## ======================================================================
##  ____  _            _ _              _   _       _ _     _____         _
## |  _ \(_)_ __   ___| (_)_ __   ___  | | | |_ __ (_) |_  |_   _|__  ___| |_ ___
## | |_) | | '_ \ / _ \ | | '_ \ / _ \ | | | | '_ \| | __|   | |/ _ \/ __| __/ __|
## |  __/| | |_) |  __/ | | | | |  __/ | |_| | | | | | |_    | |  __/\__ \ |_\__ \
## |_|   |_| .__/ \___|_|_|_| |_|\___|  \___/|_| |_|_|\__|   |_|\___||___/\__|___/
##         |_|
## ======================================================================

- name: concourse_unit_tests
  plan:
    - in_parallel:
        steps:
        - get: bats_core_src
        - get: gpdb_src
          trigger: true
        - get: gpdb7-ubuntu18.04-build
    - task: run_unit_tests
      image: gpdb7-ubuntu18.04-build
      config:
        inputs:
          - name: bats_core_src
          - name: gpdb_src
        platform: linux
        run:
          path: bash
          args:
          - -exc
          - |
            python -m unittest discover --verbose -s gpdb_src/concourse/scripts/ -p *_test.py

            if ls gpdb_src/concourse/scripts/*.bats >/dev/null 2>&1; then
              bats_core_src/install.sh /usr/local

              cd gpdb_src/concourse
              bats -t scripts/*.bats
            fi

## ======================================================================
##   ____                      _ _
##  / ___|___  _ __ ___  _ __ (_) | ___
## | |   / _ \| '_ ` _ \| '_ \| | |/ _ \
## | |__| (_) | | | | | | |_) | | |  __/
##  \____\___/|_| |_| |_| .__/|_|_|\___|
##                      |_|
## ======================================================================

- name: compile_gpdb_centos7
  plan:
  - in_parallel:
      steps:
      - get: reduced-frequency-trigger
        trigger: ((reduced-frequency-trigger-flag))
      - get: gpdb_src
        trigger: ((gpdb_src-trigger-flag))
      - get: gpdb7-centos7-build
      - get: libquicklz-installer
        resource: libquicklz-centos7
      - get: libquicklz-devel-installer
        resource: libquicklz-devel-centos7
  - task: compile_gpdb
    image: gpdb7-centos7-build
    file: gpdb_src/concourse/tasks/compile_gpdb.yml
    params:
      CONFIGURE_FLAGS: ((configure_flags_with_extensions))
      TARGET_OS: centos
      TARGET_OS_VERSION: 7
      BLD_TARGETS: "clients"
      RC_BUILD_TYPE_GCS: ((rc-build-type-gcs))
  - in_parallel:
      steps:
      - put: bin_gpdb_centos7
        params:
          file: gpdb_artifacts/bin_gpdb.tar.gz
      - put: bin_gpdb_clients_centos7
        params:
          file: gpdb_artifacts/gpdb-clients-centos7.tar.gz

- name: compile_gpdb_ubuntu18.04
  plan:
    - in_parallel:
        steps:
        - get: reduced-frequency-trigger
          trigger: ((reduced-frequency-trigger-flag))
        - get: gpdb_src
          trigger: ((gpdb_src-trigger-flag))
        - get: gpdb7-ubuntu18.04-build
        - get: libquicklz-installer
          resource: libquicklz-ubuntu18.04
    - task: compile_gpdb
      image: gpdb7-ubuntu18.04-build
      file: gpdb_src/concourse/tasks/compile_gpdb.yml
      params:
        CONFIGURE_FLAGS: ((configure_flags_with_extensions))
        TARGET_OS: ubuntu
        TARGET_OS_VERSION: "18.04"
        BLD_TARGETS: "clients"
        RC_BUILD_TYPE_GCS: ((rc-build-type-gcs))
    - in_parallel:
        steps:
        - put: bin_gpdb_ubuntu18.04
          params:
            file: gpdb_artifacts/bin_gpdb.tar.gz
        - put: bin_gpdb_clients_ubuntu18.04
          params:
            file: gpdb_artifacts/gpdb-clients-ubuntu18.04.tar.gz

# auto failover
- name: auto_failover_centos7
  plan:
    - in_parallel:
        steps:
        - get: gpdb_src
          trigger: ((gpdb_src-trigger-flag))
        - get: pg_auto_failover_src
          trigger: ((gpdb_src-trigger-flag))
        - get: gpdb7-centos7-build
    - task: test_auto_failover
      image: gpdb7-centos7-build
      file: gpdb_src/concourse/tasks/auto_failover.yml
      params:
        CONFIGURE_FLAGS: ((configure_flags_with_extensions))
        TARGET_OS: centos
        TARGET_OS_VERSION: 7
## ======================================================================
##  ___ ______        __
## |_ _/ ___\ \      / /
##  | | |    \ \ /\ / /
##  | | |___  \ V  V /
## |___\____|  \_/\_/
## ======================================================================
- name: icw_gporca_centos7
  plan:
  - in_parallel:
      steps:
      - get: gpdb_src
        passed: [compile_gpdb_centos7]
      - get: bin_gpdb
        resource: bin_gpdb_centos7
        passed: [compile_gpdb_centos7]
        trigger: true
      - get: gpdb7-centos7-test
  - task: ic_gpdb
    file: gpdb_src/concourse/tasks/ic_gpdb.yml
    image: gpdb7-centos7-test
    params:
      MAKE_TEST_COMMAND: -k PGOPTIONS='-c optimizer=on' installcheck-world
      TEST_OS: centos
      CONFIGURE_FLAGS: ((configure_flags))

- name: icw_planner_centos7
  plan:
  - in_parallel:
      steps:
      - get: gpdb_src
        passed: [compile_gpdb_centos7]
      - get: bin_gpdb
        passed: [compile_gpdb_centos7]
        resource: bin_gpdb_centos7
        trigger: true
      - get: gpdb7-centos7-test
  - task: ic_gpdb
    file: gpdb_src/concourse/tasks/ic_gpdb.yml
    image: gpdb7-centos7-test
    params:
      MAKE_TEST_COMMAND: -k PGOPTIONS='-c optimizer=off' installcheck-world
      TEST_OS: centos
      TEST_BINARY_SWAP: ((test-binary-swap))
      CONFIGURE_FLAGS: ((configure_flags))
      DUMP_DB: "true"
  - put: icw_planner_centos7_dump
    params:
      file: sqldump/dump.sql.xz

- name: icw_gporca_icproxy_centos7
  plan:
  - in_parallel:
      steps:
      - get: gpdb_src
        passed: [compile_gpdb_centos7]
      - get: bin_gpdb
        resource: bin_gpdb_centos7
        passed: [compile_gpdb_centos7]
        trigger: true
      - get: gpdb7-centos7-test
  - task: ic_gpdb
    file: gpdb_src/concourse/tasks/ic_gpdb.yml
    image: gpdb7-centos7-test
    params:
      MAKE_TEST_COMMAND: -k PGOPTIONS='-c gp_interconnect_type=proxy -c optimizer=on' installcheck-world
      TEST_OS: centos
      CONFIGURE_FLAGS: ((configure_flags))

- name: icw_planner_icproxy_centos7
  plan:
  - in_parallel:
      steps:
      - get: gpdb_src
        passed: [compile_gpdb_centos7]
      - get: bin_gpdb
        passed: [compile_gpdb_centos7]
        resource: bin_gpdb_centos7
        trigger: true
      - get: gpdb7-centos7-test
  - task: ic_gpdb
    file: gpdb_src/concourse/tasks/ic_gpdb.yml
    image: gpdb7-centos7-test
    params:
      MAKE_TEST_COMMAND: -k PGOPTIONS='-c gp_interconnect_type=proxy -c optimizer=off' installcheck-world
      TEST_OS: centos
      CONFIGURE_FLAGS: ((configure_flags))

- name: icw_gporca_ictcp_centos7
  plan:
  - in_parallel:
      steps:
      - get: gpdb_src
        passed: [compile_gpdb_centos7]
      - get: bin_gpdb
        resource: bin_gpdb_centos7
        passed: [compile_gpdb_centos7]
        trigger: true
      - get: gpdb7-centos7-test
  - task: ic_gpdb
    file: gpdb_src/concourse/tasks/ic_gpdb.yml
    image: gpdb7-centos7-test
    params:
      MAKE_TEST_COMMAND: -k PGOPTIONS='-c gp_interconnect_type=tcp -c optimizer=on' installcheck-world
      TEST_OS: centos

- name: icw_gporca_ubuntu18.04
  plan:
    - in_parallel:
        steps:
        - get: gpdb_src
          passed: [compile_gpdb_ubuntu18.04]
        - get: bin_gpdb
          resource: bin_gpdb_ubuntu18.04
          passed: [compile_gpdb_ubuntu18.04]
          trigger: true
        - get: gpdb7-ubuntu18.04-test
    - task: ic_gpdb
      file: gpdb_src/concourse/tasks/ic_gpdb.yml
      image: gpdb7-ubuntu18.04-test
      params:
        MAKE_TEST_COMMAND: -k PGOPTIONS='-c optimizer=on' installcheck-world
        TEST_OS: ubuntu
        CONFIGURE_FLAGS: ((configure_flags))

- name: icw_planner_ubuntu18.04
  plan:
    - in_parallel:
        steps:
        - get: gpdb_src
          passed: [compile_gpdb_ubuntu18.04]
        - get: bin_gpdb
          passed: [compile_gpdb_ubuntu18.04]
          resource: bin_gpdb_ubuntu18.04
          trigger: true
        - get: gpdb7-ubuntu18.04-test
    - task: ic_gpdb
      file: gpdb_src/concourse/tasks/ic_gpdb.yml
      image: gpdb7-ubuntu18.04-test
      params:
        MAKE_TEST_COMMAND: -k PGOPTIONS='-c optimizer=off' installcheck-world
        TEST_OS: ubuntu
        CONFIGURE_FLAGS: ((configure_flags))

- name: icw_gporca_icproxy_ubuntu18.04
  plan:
    - in_parallel:
        steps:
        - get: gpdb_src
          passed: [compile_gpdb_ubuntu18.04]
        - get: bin_gpdb
          resource: bin_gpdb_ubuntu18.04
          passed: [compile_gpdb_ubuntu18.04]
          trigger: true
        - get: gpdb7-ubuntu18.04-test
    - task: ic_gpdb
      file: gpdb_src/concourse/tasks/ic_gpdb.yml
      image: gpdb7-ubuntu18.04-test
      params:
        MAKE_TEST_COMMAND: -k PGOPTIONS='-c gp_interconnect_type=proxy -c optimizer=on' installcheck-world
        TEST_OS: ubuntu
        CONFIGURE_FLAGS: ((configure_flags))

- name: icw_planner_icproxy_ubuntu18.04
  plan:
    - in_parallel:
        steps:
        - get: gpdb_src
          passed: [compile_gpdb_ubuntu18.04]
        - get: bin_gpdb
          passed: [compile_gpdb_ubuntu18.04]
          resource: bin_gpdb_ubuntu18.04
          trigger: true
        - get: gpdb7-ubuntu18.04-test
    - task: ic_gpdb
      file: gpdb_src/concourse/tasks/ic_gpdb.yml
      image: gpdb7-ubuntu18.04-test
      params:
        MAKE_TEST_COMMAND: -k PGOPTIONS='-c gp_interconnect_type=proxy -c optimizer=off' installcheck-world
        TEST_OS: ubuntu
        CONFIGURE_FLAGS: ((configure_flags))

- name: gate_icw_end
  plan:
  - in_parallel:
      steps:
      - get: bin_gpdb_centos7
        passed:
        - icw_gporca_centos7
        - icw_planner_centos7
        - icw_gporca_icproxy_centos7
        - icw_planner_icproxy_centos7
        - icw_gporca_ictcp_centos7
      - get: icw_planner_centos7_dump
        passed:
        - icw_planner_centos7
      - get: gpdb_src
        passed:
        - icw_gporca_centos7
        - icw_planner_centos7
        - icw_gporca_icproxy_centos7
        - icw_planner_icproxy_centos7
        - icw_gporca_ictcp_centos7
        trigger: true


 # end CLI test_sections



## ======================================================================
##    __      _                 _
##   /__\_  _| |_ ___ _ __  ___(_) ___  _ __  ___
##  /_\ \ \/ / __/ _ \ '_ \/ __| |/ _ \| '_ \/ __|
## //__  >  <| ||  __/ | | \__ \ | (_) | | | \__ \
## \__/ /_/\_\\__\___|_| |_|___/_|\___/|_| |_|___/
## ======================================================================

