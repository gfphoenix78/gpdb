CREATE OR REPLACE FUNCTION gp_workfile_mgr_test_on_master(testname text) RETURNS setof bool LANGUAGE C VOLATILE EXECUTE ON MASTER AS '@abs_builddir@/isolation2_regress@DLSUFFIX@', 'gp_workfile_mgr_test_harness';
CREATE

CREATE OR REPLACE FUNCTION gp_workfile_mgr_test_on_segments(testname text) RETURNS setof bool LANGUAGE C VOLATILE EXECUTE ON ALL SEGMENTS AS '@abs_builddir@/isolation2_regress@DLSUFFIX@', 'gp_workfile_mgr_test_harness';
CREATE

CREATE FUNCTION gp_workfile_mgr_test(testname text) RETURNS SETOF BOOL AS $$ SELECT C.* FROM gp_workfile_mgr_test_on_master($1) as C UNION ALL SELECT C.* FROM gp_workfile_mgr_test_on_segments($1) as C $$ LANGUAGE SQL;
CREATE

-- setup for workfile made in temp tablespace test
! mkdir -p '@testtablespace@/workfile_mgr';

1: CREATE TABLESPACE ts1 LOCATION '@testtablespace@/workfile_mgr';
CREATE

1: SELECT gp_workfile_mgr_test('workfile_made_in_temp_tablespace');
 gp_workfile_mgr_test 
----------------------
 t                    
 t                    
 t                    
 t                    
(4 rows)

1: DROP TABLESPACE ts1;
DROP

1q: ... <quitting>

CREATE FUNCTION gp_workfile_mgr_cache_entries() RETURNS TABLE(segid int4, prefix text, size int8, operation text, slice int4, sessionid int4, commandid int4, numfiles int4) AS '$libdir/gp_workfile_mgr', 'gp_workfile_mgr_cache_entries' LANGUAGE C VOLATILE EXECUTE ON ALL SEGMENTS;
CREATE

1: SELECT gp_workfile_mgr_test('fd_tests');
 gp_workfile_mgr_test 
----------------------
 t                    
 t                    
 t                    
 t                    
(4 rows)
1q: ... <quitting>


1: select segid, count(1) from gp_workfile_mgr_cache_entries() group by segid;
 segid | count 
-------+-------
(0 rows)
1: select gp_workfile_mgr_test('workfile_leakage');
 gp_workfile_mgr_test 
----------------------
 t                    
 t                    
 t                    
 t                    
(4 rows)
2: select segid, count(1) from gp_workfile_mgr_cache_entries() group by segid order by segid;
 segid | count 
-------+-------
 0     | 4     
 1     | 4     
 2     | 4     
(3 rows)
1q: ... <quitting>
2: select segid, count(1) from gp_workfile_mgr_cache_entries() group by segid order by segid;
 segid | count 
-------+-------
(0 rows)

